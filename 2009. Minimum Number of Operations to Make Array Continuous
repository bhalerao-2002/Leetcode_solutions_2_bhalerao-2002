class Solution {
public:
    //Thanks to bhalerao-2002
    
    int minOperations(vector<int>& nums) {

        int n=nums.size();
        sort(nums.begin(),nums.end());
       if(n==1)
       return 0;
     int mini=INT_MAX;

     vector<int> v(n+1);
     map<int,int> mp;

     int count=0;
     for(int i=0;i<n;i++)
     {
         mp[nums[i]]++;
         if(mp[nums[i]]!=1)
         count++;
         v[i]=count;

     }
     v[n]=v[n-1];

        for(int i=0;i<n-1;i++)
        {
            int idx=lower_bound(nums.begin(),nums.end(),nums[i]+n-1)-nums.begin();
             int x=i;


            if(idx!=n&&nums[idx]!=nums[i]+n-1)
            x++;
            if(idx==n)
            x++;

            x+=n-1-idx;
            x+=v[idx]-v[i];
            mini=min(mini,x);
            cout<<x<<" ";
        }        
return mini;
        
    }
};
