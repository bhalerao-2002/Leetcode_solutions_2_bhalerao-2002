/*
 Intuition: 

 For every garbage character there will be time of 1 min for picking, So we can calculate time by adding all the elements in garbage array. Now every truck will travel until there respective elements is remainig in garbage aaray, If there is no metal from house 2 then metal-truck will only stop there will not move. 
hence, for metal truck travel time will be time to go(from H0 to H1) and (from H1 to H2) means sum of time as travel[0] + travel[1] only, simply for getting time of truck to travel from H0 to Hn we will need sum of travel[0] + travel[1] + ... + travel[n-1]. 
for sum of time to travel which is given in the travel array, we will do pre-compute sum so we will get addition of at n-1 index itself.

*/
class Solution {
public:
    int garbageCollection(vector<string>& garbage, vector<int>& travel) {
        ios::sync_with_stdio(false);
        cin.tie(0);
        cout.tie(0);
        int n = garbage.size();
        int time = 0;
        int M_idx = 0, P_idx = 0, G_idx = 0;

        for(int i = 0; i<n; i++){
            for(int j = 0; j<garbage[i].length();j++ ){
                if(garbage[i][j] == 'M'){
                    M_idx = i;
                } else if(garbage[i][j] == 'P'){
                    P_idx = i;
                }else if(garbage[i][j] == 'G'){
                    G_idx = i;
                }
                time++;
            }
        }

        for(int i = 1; i<travel.size(); i++){
            travel[i] += travel[i-1];
        }

        time += M_idx>0? travel[M_idx - 1] : 0;
        time += P_idx>0? travel[P_idx - 1] : 0;
        time += G_idx>0? travel[G_idx - 1]: 0;

        return time;
    }
};
